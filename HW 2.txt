JSON
 4. Создать внешний репозиторий c названием JSON: Заходим на гитхаб, раздел репозиторий, жмем New, создаём репозиторий.
 5. Клонировать репозиторий JSON на локальный компьютер: git clone https://github.com/Rolixer4/JSON.git
 6. Внутри локального JSON создать файл “new.json”:touch new.json
 7. Добавить файл под гит: git add .; git add new.json
 8. Закоммитить файл: git commin -m "add a new.json file"
 9. Отправить файл на внешний GitHub репозиторий: git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON: 
{       "Full Name": "Nikita Shevaldin",
        "Age": 23,
        "Number of pets": 4,
        "Expected salary at the start": 500
}

 11. Отправить изменения на внешний репозиторий: git commit -am "add 4 lines to new.json"; git push
 12. Создать файл preferences.json: > preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON:
{       "Favorite Movie": "Limitless",
        "Favorite Series": "The Witcher",
        "Favorite Food": "Steak Denver",
        "Favorite Season": "Summer",
        "Side You Would Like To Visit": "Dark Side",
        "Country You Would Like To Visit": "USA"
}

 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON: touch skills.json
{       "Skills to be learned on the course": "Soft and Hard skills",
        "Hard Skills to be learned on the course": "Умение составлять документацию", "Умение писать баг репорты", "Понимание теории и основы тестирования", "Понимание работы тестирования"
}

 15. Отправить сразу 2 файла на внешний репозиторий: git commit -am "add 2 files to repository"; git push
 16. На веб интерфейсе создать файл bug_report.json: В папке репозиториев нажать add new file, Вводим название файла
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе: Добавить коммит в строчку commit new file, жмем commit new file
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON 
{     
      "Summary": "Нет кнопки регистрации на странице новых пользователей",
      "STR": "1. Зайти на домашнюю страницу https://www.fedex.com/ru-ru/home.html 2. Нажать на кнопку Зарегистрироваться/Войти",
      "Expected Result": "При нажатии на кнопку Зарегистрироваться/Войти будет предложена возможность регистрации нового пользователя",
      "Actual Result": "Зарегистрироваться на сайте можно только нажав на кнопку зарегистрироваться на fedex.com в нижней части страницы"
}
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе: Добавляем коммит и нажимает Commit changes
 20. Синхронизировать внешний и локальный репозиторий JSON: git pull


XML
 21. Создать внешний репозиторий c названием XML: Заходим на гитхаб, раздел репозиторий, жмем New, создаём репозиторий.
 22. Клонировать репозиторий XML на локальный компьютер: git clone
 23. Внутри локального XML создать файл “new.xml”: touch new.xml
 24. Добавить файл под гит: git add new.xml
 25. Закоммитить файл: git commit -m "add new.xml file"
 26. Отправить файл на внешний GitHub репозиторий: git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML:
<?xml version=" 1.0 " encoding="utf-8"?>
<FullName> Nikita Shevaldin </FullName>
<Age> 23 </Age>
<NumberOfPets> 4 </NumberOfPets>
<ExpectedSalary> 500 </ExpectedSalary>
 28. Отправить изменения на внешний репозиторий: git commit -am "add 4 lines to new.xml"; git push
 29. Создать файл preferences.xml: touch preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML:
<?xml version=" 1.0 " encoding="utf-8"?>
<FavoriteMovie> Limitless </FavoriteMovie>
<FavoriteSeries> The Witcher </FavoriteSeries>
<FavoriteFood> Steak Denver </FavoriteFood>
<FavoriteSeason> Summer </FavoriteSeason>
<SideToVisit> Dark Side </SideToVisit>
<CountryToVisit> USA </CountryToVisit>
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML: touch skills.xml
<?xml version=" 1.0 " encoding="utf-8"?>
<SkillsToBeLearned>Soft and Hard skills </SkillsToBeLearned>
<HardSkills> Умение составлять документацию, Умение писать баг репорты, Понимание теории и основы тестирования, Понимание работы тестирования </HardSkills>
 32. Сделать коммит в одну строку: git commit -am "add 2 files to repository"
 33. Отправить сразу 2 файла на внешний репозиторий: git push
 34. На веб интерфейсе создать файл bug_report.xml: В папке репозиториев нажать add new file, Вводим название файла Bug_report.xml
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе: Вводим коммит в отведенное для этого поле и нажимает Commit new file
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML: Заходим в файл Bug_report.xml, нажимает Edit file
<Summary> Нет кнопки регистрации на странице новых пользователей </Summary>
<STR> 1. Зайти на домашнюю страницу https://www.fedex.com/ru-ru/home.html 2. Нажать на кнопку Зарегистрироваться/Войти </STR>
<ExpectedResult> При нажатии на кнопку Зарегистрироваться/Войти будет предложена возможность регистрации нового пользователя </ExpectedResult>
<ActualResult> "Зарегистрироваться на сайте можно только нажав на кнопку зарегистрироваться на fedex.com в нижней части страницы </ActualResult>
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе: Вводим коммит и нажимает Commit changes
 38. Синхронизировать внешний и локальный репозиторий XML: gut pull

TXT
 1. Создать внешний репозиторий c названием TXT: Заходим на гитхаб, раздел репозиторий, жмем New, создаём репозиторий.
 2. Клонировать репозиторий TXT на локальный компьютер: git clone
 3. Внутри локального TXT создать файл “new.txt”: touch new.txt
 4. Добавить файл под гит: git add new.txt
 5. Закоммитить файл: git commit -m "add new.txt file to repository"
 6. Отправить файл на внешний GitHub репозиторий: git push
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT: vim new.txt
ФИО: Шевалдин Никита Дмитриевич
Возраст: 23
Количество домашних животных: 4
Будущая желаемая зарплата: 500$ на стажировке
 8. Отправить изменения на внешний репозиторий: git push
 9. Создать файл preferences.txt: touch preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT: vim preferences.txt
Любимый фильм: Limitless
Любимый сериал: The Witcher
Любимая еда: Стейк Денвер
Любимое время года: Лето
Сторона которую хотел бы посетить: Темная сторона
Страна которую хотел бы посетить: США
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT: touch skills.txt, vim skills.txt
Скиллы, которые будут изучены на курсе: Хард и софт скиллы
Хард скиллы: Умение составлять документацию, Умение писать баг репорты, Понимание теории и основы тестирования, Понимание работы тестирования
 12. Сделать коммит в одну строку: git commit -am "add 2 files to repository"
 13. Отправить сразу 2 файла на внешний репозиторий: git push
 14. На веб интерфейсе создать файл bug_report.txt: В папке репозиториев нажать add new file, Вводим название файла Bug_report.txt
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе: Вводим коммит в отведенное для этого поле и нажимает Commit new file
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT: Заходим в файл bug_report.txt, нажимает Edit file
Summary: Нет кнопки регистрации на странице новых пользователей
STR: 1. Зайти на домашнюю страницу https://www.fedex.com/ru-ru/home.html 2. Нажать на кнопку Зарегистрироваться/Войти 
ExpectedResult: При нажатии на кнопку Зарегистрироваться/Войти будет предложена возможность регистрации нового пользователя 
ActualResult: Зарегистрироваться на сайте можно только нажав на кнопку зарегистрироваться на fedex.com в нижней части страницы 
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе: Вводим коммит и нажимает Commit changes
 18. Синхронизировать внешний и локальный репозиторий TXT: git fetch; git pull
